(()=>{var e,r,t,o={617:e=>{e.exports=function(){return'<!doctype html>\n                <html lang="en">\n                    <head>\n                        <meta charset="utf-8">\n                        <title>Grocery Shopping List</title>\n                        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,300,400">\n                        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">\n                    </head>\n                    <body>\n                        <div id="root"></div>\n                        <script type="text/javascript" src="/dist/client.bundle.js"><\/script>\n                    </body>\n                </html>'}},237:e=>{var r={ENV:"production",PORT:process.env.PORT||4e3,JWT_SECRET:process.env.JWT_SECRET||"mum's the word",MONGODB_URI:process.env.MONGODB_URI||"mongodb://localhost:27017/grocery-shopping-list"};e.exports=r},187:(e,r,t)=>{t(354),t(714),t(113),t(83),e.exports={compile:function(e){}}},316:(e,r,t)=>{var o=t(820),s=t(851).createToken;e.exports={registerShopper:function(e,r,t){o.create(e.body).then((function(t){var o=s(e.body.username);r.cookie("jwt",o,{httpOnly:!0,maxAge:864e5}),r.status(200).send(t)})).catch((function(e){r.send("Error! Shopper registration failed!"+e)}))},loginShopper:function(e,r,t){o.findOne({username:e.body.username},(function(t,o){if(o)if(o.password=e.body.password){var n=s(e.body.username);r.cookie("jwt",n,{httpOnly:!0,maxAge:864e5}),r.status(200).send({username:o.username})}else r.status(403).send({error:"User login failed!"})}))},logoutShopper:function(e,r){return r.clearCookie("t"),res.status("200").send({message:"Shopper logout succssful!"})}}},408:(e,r,t)=>{var o=t(860),s=t(17),n=t(617),i=(t(187),t(757)),a=process.cwd(),u=o();u.use(o.json()),u.use(o.urlencoded()),u.use("/dist",o.static(s.join(a,"dist"))),u.get("/",(function(e,r){r.status(200).send(n())})),u.use("/api",i),e.exports=u},820:(e,r,t)=>{var o=t(185),s=new(0,o.Schema)({username:{type:String,trim:!0,unique:!0,required:[!0,"Username is required!"]},email:{type:String,lowercase:!0,trim:!0,unique:!0,match:[/.+\@.+\..+/,"Please fill a valid email address."],required:[!0,"Email is required!"]},passkey:{type:String,trim:!0,minLength:[8,"Minimum password length is 8 characters"],required:[!0,"Password is required!"]},salt:{String},created:{type:Date,default:Date.now}}),n=o.model("Shopper",s);e.exports=n},757:(e,r,t)=>{var o=t(860),s=t(316),n=t(851),i=(n.requireAuthorization,n.isAuthorized,o.Router());i.post("/shopper/signup",s.registerShopper),i.post("/shopper/signin",s.loginShopper),i.get("/shopper/signout",s.logoutShopper),e.exports=i},851:(e,r,t)=>{var o=t(344),s=t(779),n=t(237),i=s({secret:n.JWT_SECRET,userProperty:"auth",algorithms:["RS256"]});e.exports={createToken:function(e){return o.sign({shopperUsername:e},n.JWT_SECRET,{expiresIn:86400})},requireAuthorization:i,isAuthorized:function(e,r,t){if(!e.profile||!e.auth||e.profile._id!=e.auth._id)return r.status("403").send({error:"Shopper not authorized to perform action!"});t()}}},83:(e,r,t)=>{var o=t(17),s=(t(354),process.cwd()),n={name:"browser",mode:"development",devtool:"eval-source-map",entry:["webpack-hot-middleware/client?reload=true",o.join(s,"client/src/client.js")],output:{path:o.join(s,"/dist"),filename:"client.bundle.js",publicPath:"/dist/"},module:{rules:[{test:/\.jsx?$/,exclude:/node_modules/,use:["babel-loader"]}]}};e.exports=n},860:e=>{"use strict";e.exports=require("express")},779:e=>{"use strict";e.exports=require("express-jwt")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},185:e=>{"use strict";e.exports=require("mongoose")},354:e=>{"use strict";e.exports=require("webpack")},714:e=>{"use strict";e.exports=require("webpack-dev-middleware")},113:e=>{"use strict";e.exports=require("webpack-hot-middleware")},17:e=>{"use strict";e.exports=require("path")}},s={};function n(e){var r=s[e];if(void 0!==r)return r.exports;var t=s[e]={exports:{}};return o[e](t,t.exports,n),t.exports}e=n(185),r=n(237),t=n(408),e.Promise=global.Promise,e.connect(r.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),e.connection.once("open",(function(){console.log("Database connection successful...")})).on("error",(function(){console.log("Database connection failure on ".concat(r.MONGODB_URI,"..."))})),t.listen(r.PORT,(function(e){e&&console.log(e),console.info("Server initiated on port %s...",r.PORT)})),module.exports={}})();